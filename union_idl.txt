union MyUnion switch (long) {
    case 1:
      long long_branch;
    case 3:
      float float_branch;
    case 4:
      char  char_branch;
};


//<union_def> ::= "union" <identifier> "switch" "(" <switch_type_spec> ")" "{" <switch_body> "}"
(51) <switch_type_spec> ::= <integer_type> | <char_type> | <boolean_type> | <scoped_name>
(52) <switch_body> ::= <case>+
(53) <case> ::= <case_label>+ <type_spec> <declarator> ";"
(54) <case_label> ::= "case" <const_expr> ":" | "default" ":"

    "MyUnion": {
        "kind": "union",
        "annotations": {
            "nested": true
        },
        "discriminator": {
            "kind": "int32",
            "annotations": {
                "key": true
            }
        },
        "cases": [
            {
                "case": 42,
                "name": "unionValue1",
                "kind": "boolean"
            },
            {
                "case": 32,
                "name": "unionValue2",
                "kind": "float32"
            },
            {
                "case": [
                    64,
                    128
                ],
                "name": "unionValue3",
                "kind": "float64"
            },
            {
                "case": "256",
                "name": "unionValue4",
                "kind": "map",
                "key_type": "string",
                "value_type": "string"
            },
            {
                "case": "default",
                "name": "unionValueDefault",
                "kind": "enum",
                "type": "MyEnum"
            }
        ]
    },
