$interval = 10  # 기록 간격(초)
$logFile = "C:\temp\system_monitoring_log.txt"  # 로그 파일 경로

while ($true) {
    # 현재 날짜와 시간
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"

    # 각 코어의 사용량을 측정하고 평균 계산
    $coreUsageTotal = 0
    $cpuCounter = Get-Counter '\Processor(_Total)\% Processor Time'
    $coreCount = $cpuCounter.CounterSamples.Count
    foreach ($sample in $cpuCounter.CounterSamples) {
        $coreUsageTotal += $sample.CookedValue
    }
    
    # 코어 수가 0이 아닌 경우만 평균 계산
    if ($coreCount -gt 0) {
        $averageCoreUsage = [math]::round($coreUsageTotal / $coreCount, 2)
    } else {
        $averageCoreUsage = 0
    }

    $totalMemory = Get-WmiObject Win32_OperatingSystem | Select-Object -ExpandProperty TotalVisibleMemorySize
    $freeMemory = Get-WmiObject Win32_OperatingSystem | Select-Object -ExpandProperty FreePhysicalMemory
    $usedMemory = $totalMemory - $freeMemory
    $memoryUsage = [math]::round($usedMemory / $totalMemory * 100, 2)
    $memoryInUseGB = [math]::round($usedMemory / 1MB, 2)
    $totalMemoryGB = [math]::round($totalMemory / 1MB, 2)

    # 로그 항목 작성
    $logEntry = "$timestamp - CPU Usage: $cpuUsage%, Memory Usage: $memoryUsage% ($memoryInUseGB GB / $totalMemoryGB GB)"
        
    # 로그 파일에 기록
    Add-Content -Path $logFile -Value $logEntry
    
    # 콘솔에 출력
    Write-Host $logEntry
    
    # 지정된 간격만큼 대기
    Start-Sleep -Seconds $interval
}
