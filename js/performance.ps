$interval = 10  # 기록 간격(초)
$logFile = "C:\system_monitoring_log.txt"  # 로그 파일 경로

while ($true) {
    # 현재 날짜와 시간
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"

    # 전체 CPU 사용량 측정
    $cpuCounter = Get-Counter '\Processor(_Total)\% Processor Time'
    $cpuUsage = [math]::round($cpuCounter.CounterSamples.CookedValue, 2)

    # CPU 코어 수 확인
    $numOfCores = (Get-WmiObject Win32_Processor).NumberOfCores | Measure-Object -Minimum | Select-Object -ExpandProperty Minimum
    
    # 각 코어의 사용량을 측정하고 평균 계산
    $coreUsageTotal = 0
    $coreCounter = Get-Counter '\Processor(*)\% Processor Time'
    $coreCount = $coreCounter.CounterSamples.Count
    foreach ($sample in $coreCounter.CounterSamples) {
        $coreUsageTotal += $sample.CookedValue
    }
    
    # 코어 수가 0이 아닌 경우만 평균 계산
    if ($coreCount -gt 0) {
        $averageCoreUsage = [math]::round($coreUsageTotal / $coreCount, 2)
    } else {
        $averageCoreUsage = 0
    }

    # 전체 메모리 사용량
    $osInfo = Get-WmiObject Win32_OperatingSystem
    $totalMemoryMB = [math]::round($osInfo.TotalVisibleMemorySize / 1MB, 2)
    $freeMemoryMB = [math]::round($osInfo.FreePhysicalMemory / 1MB, 2)
    
    # 전체 메모리가 0이 아닐 때만 계산
    if ($totalMemoryMB -gt 0) {
        $usedMemoryMB = $totalMemoryMB - $freeMemoryMB
        $memoryUsagePercent = [math]::round(($usedMemoryMB / $totalMemoryMB) * 100, 2)
    } else {
        $usedMemoryMB = 0
        $memoryUsagePercent = 0
    }

    # 로그 항목 작성
    $logEntry = "$timestamp - CPU Usage: $averageCoreUsage%, Memory Usage: $memoryUsagePercent% ($usedMemoryMB MB / $totalMemoryMB MB)"
    
    # 로그 파일에 기록
    Add-Content -Path $logFile -Value $logEntry
    
    # 콘솔에 출력
    Write-Host $logEntry
    
    # 지정된 간격만큼 대기
    Start-Sleep -Seconds $interval
}
