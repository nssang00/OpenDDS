float scaleFactor = sampleSize.y / lineWidth;
float spacingScaled = (sampleSize.x + spacingPx) * scaleFactor;
float currentLengthScaled = currentLengthPx * scaleFactor;
float uCoordPx = mod(currentLengthScaled - startOffsetPx * scaleFactor, spacingScaled);
uCoordPx = clamp(uCoordPx, 0.5, sampleSize.x - 0.5); // sampleSize.x는 패턴 부분의 width
if (uCoordPx > sampleSize.x - 1.0) return vec4(0.0);

vec4 sampleStrokePattern(sampler2D texture, vec2 textureSize, vec2 textureOffset, vec2 sampleSize, float spacingPx, float startOffsetPx, float currentLengthPx, float currentRadiusRatio, float lineWidth) {
  float scaleFactor = sampleSize.y / lineWidth;
  float currentLengthScaled = currentLengthPx * scaleFactor;
  float spacingScaled = spacingPx * scaleFactor;
  float uCoordPx = mod(currentLengthScaled - startOffsetPx * scaleFactor, spacingScaled);
  uCoordPx = (uCoordPx / spacingScaled) * sampleSize.x;
  float vCoordPx = (-currentRadiusRatio * 0.5 + 0.5) * sampleSize.y;
  
  vec2 texCoord = (vec2(uCoordPx, vCoordPx) + textureOffset) / textureSize;
  return texture2D(texture, texCoord);
}



